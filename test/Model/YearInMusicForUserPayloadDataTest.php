<?php
/**
 * YearInMusicForUserPayloadDataTest
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * ListenBrainz Swagger - OpenAPI 3.0
 *
 * OpenAPI client defintion.
 *
 * The version of the OpenAPI document: v-2024-07-17.0
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.12.0-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the model.
 */

namespace OpenAPI\Client\Test\Model;

use PHPUnit\Framework\TestCase;

/**
 * YearInMusicForUserPayloadDataTest Class Doc Comment
 *
 * @category    Class
 * @description YearInMusicForUserPayloadData
 * @package     OpenAPI\Client
 * @author      OpenAPI Generator team
 * @link        https://openapi-generator.tech
 */
class YearInMusicForUserPayloadDataTest extends TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "YearInMusicForUserPayloadData"
     */
    public function testYearInMusicForUserPayloadData()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "artist_map"
     */
    public function testPropertyArtistMap()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "day_of_week"
     */
    public function testPropertyDayOfWeek()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "listens_per_day"
     */
    public function testPropertyListensPerDay()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "most_listened_year"
     */
    public function testPropertyMostListenedYear()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "new_releases_of_top_artists"
     */
    public function testPropertyNewReleasesOfTopArtists()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "playlist_top_discoveries_for_year"
     */
    public function testPropertyPlaylistTopDiscoveriesForYear()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "playlist_top_missed_recordings_for_year"
     */
    public function testPropertyPlaylistTopMissedRecordingsForYear()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "similar_users"
     */
    public function testPropertySimilarUsers()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "top_artists"
     */
    public function testPropertyTopArtists()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "top_genres"
     */
    public function testPropertyTopGenres()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "top_recordings"
     */
    public function testPropertyTopRecordings()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "top_release_groups"
     */
    public function testPropertyTopReleaseGroups()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "total_artists_count"
     */
    public function testPropertyTotalArtistsCount()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "total_listen_count"
     */
    public function testPropertyTotalListenCount()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "total_listening_time"
     */
    public function testPropertyTotalListeningTime()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "total_new_artists_discovered"
     */
    public function testPropertyTotalNewArtistsDiscovered()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "total_recordings_count"
     */
    public function testPropertyTotalRecordingsCount()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "total_release_groups_count"
     */
    public function testPropertyTotalReleaseGroupsCount()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }
}
